---------------------------------------
-- author: Gonzalo Salazar
-- course: SQL for Data Science (Coursera)
-- purpose: Final Project
---------------------------------------

-- Description --
Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera
Worksheet.

This is a 2-part assignment. In the first part, you are asked a series of
questions that will help you profile and understand the data just like a data
scientist would. For this first part of the assignment, you will be assessed
both on the correctness of your findings, as well as the code you used to arrive
at your answer. You will be graded on how easy your code is to read, so remember
to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own
inferences and analysis of the data for a particular research question you want
to answer. You will be required to prepare the dataset for the analysis you
choose to do. As with the first part, you will be graded, in part, on how easy
your code is to read, so use proper formatting and comments to illustrate and
communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the
questions you are being asked, and your job will be to transfer your answers
and SQL coding where indicated into this worksheet so that your peers can
review your work. You should be able to use any Text Editor (Windows Notepad,
Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers.
If you are going to use Word or some other page layout application, just be
careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains
intact for you reviewer.

------------------------------------------------------------------------------
Part 1: Yelp Dataset Profiling and Understanding
------------------------------------------------------------------------------

---------------------------------------
1. Profile the data by finding the total number of records for each of the
tables below:

i. Attribute table =  10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

	SQL code used to arrive at answer:

		SELECT COUNT(*)
		FROM table_name

---------------------------------------
2. Find the total distinct records by either the foreign key or primary key
for each table. If two foreign keys are listed in the table, please specify
which foreign key.

i. Business = 10000 (id)
ii. Hours = 2052 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 10000 (id)
vi. Checkin = 493 (business_id)
vii. Photo = 10000 (id)
viii. Tip = 537 (user_id)
ix. User = 10000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

	SQL code used to arrive at answer:

		SELECT COUNT(DISTINCT key_name)
		FROM table_name

---------------------------------------
3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no.

	SQL code used to arrive at answer:

		SELECT COUNT(*)
		FROM user
		WHERE id IS NULL
			OR name IS NULL
			OR review_count IS NULL
			OR yelping_since IS NULL
			OR useful IS NULL
			OR funny IS NULL
			OR cool IS NULL
			OR fans IS NULL
			OR average_stars IS NULL
			OR compliment_hot IS NULL
			OR compliment_more IS NULL
			OR compliment_profile IS NULL
			OR compliment_cute IS NULL
			OR compliment_list IS NULL
			OR compliment_note IS NULL
			OR compliment_plain IS NULL
			OR compliment_cool IS NULL
			OR compliment_funny IS NULL
			OR compliment_writer IS NULL
			OR compliment_photos IS NULL

---------------------------------------
4. For each table and column listed below, display the smallest (minimum),
largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars

		min: 1		max: 5		avg: 3.7082


	ii. Table: Business, Column: Stars

		min: 1.0 	max: 5.0	 	avg: 3.6549


	iii. Table: Tip, Column: Likes

		min: 0		max: 2		avg: 0.0144


	iv. Table: Checkin, Column: Count

		min: 1		max: 53		avg: 1.9414


	v. Table: User, Column: Review_count

		min: 0		max: 2000		avg: 24.2995


	SQL code used to arrive at answer:

		SELECT MAX(column_name),
			MIN(column_name),
			AVG(column_name),
		FROM table_name

---------------------------------------
5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT SUM(review_count) AS reviews,
		  city
		FROM business
		GROUP BY city
		ORDER BY SUM(review_count) DESC

	Copy and Paste the Result Below:

	+---------+-----------------+
	| reviews | city            |
	+---------+-----------------+
	|   82854 | Las Vegas       |
	|   34503 | Phoenix         |
	|   24113 | Toronto         |
	|   20614 | Scottsdale      |
	|   12523 | Charlotte       |
	|   10871 | Henderson       |
	|   10504 | Tempe           |
	|    9798 | Pittsburgh      |
	|    9448 | Montréal        |
	|    8112 | Chandler        |
	|    6875 | Mesa            |
	|    6380 | Gilbert         |
	|    5593 | Cleveland       |
	|    5265 | Madison         |
	|    4406 | Glendale        |
	|    3814 | Mississauga     |
	|    2792 | Edinburgh       |
	|    2624 | Peoria          |
	|    2438 | North Las Vegas |
	|    2352 | Markham         |
	|    2029 | Champaign       |
	|    1849 | Stuttgart       |
	|    1520 | Surprise        |
	|    1465 | Lakewood        |
	|    1155 | Goodyear        |
	+---------+-----------------+
	(Output limit exceeded, 25 of 362 total rows shown)

---------------------------------------
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT
		stars AS star_rating,
		SUM(review_count) AS total_reviews
	FROM business
	WHERE city = "Avon"
	GROUP BY stars
	ORDER BY stars DESC

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------------+---------------+
	| star_rating | total_reviews |
	+-------------+---------------+
	|         5.0 |             3 |
	|         4.5 |            31 |
	|         4.0 |            21 |
	|         3.5 |            88 |
	|         2.5 |             6 |
	|         1.5 |            10 |
	+-------------+---------------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT
		stars AS star_rating,
		SUM(review_count) AS total_reviews
	FROM business
	WHERE city = "Beachwood"
	GROUP BY stars
	ORDER BY stars DESC

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------------+---------------+
	| star_rating | total_reviews |
	+-------------+---------------+
	|         5.0 |            23 |
	|         4.5 |            17 |
	|         4.0 |            69 |
	|         3.5 |             6 |
	|         3.0 |            11 |
	|         2.5 |             3 |
	|         2.0 |             8 |
	+-------------+---------------+

---------------------------------------
7. Find the top 3 users based on their total number of reviews:

	SQL code used to arrive at answer:

		SELECT
		  id,
		  name,
		  SUM(review_count) AS reviews
		FROM user
	  GROUP BY id
		ORDER BY SUM(review_count) DESC
		LIMIT 3

	Copy and Paste the Result Below:

	+------------------------+--------+---------+
	| id                     | name   | reviews |
	+------------------------+--------+---------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |    2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |    1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |    1339 |
	+------------------------+--------+---------+

---------------------------------------
8. Does posting more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	Not necessarily. For instance, look at Gerald and Harald. The former has more
	reviews than the latter, but the latter has more fans than the former. If
	there were a positive correlation here, we should have expected that Harald
	would have had fewer fans compared to Gerald.

	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Gerald    |         2000 |  253 |
	| Sara      |         1629 |   50 |
	| Yuri      |         1339 |   76 |
	| .Hon      |         1246 |  101 |
	| William   |         1215 |  126 |
	| Harald    |         1153 |  311 |
	| eric      |         1116 |   16 |
	| Roanna    |         1039 |  104 |
	| Mimi      |          968 |  497 |
	| Christine |          930 |  173 |
	| Ed        |          904 |   38 |
	| Nicole    |          864 |   43 |
	| Fran      |          862 |  124 |
	| Mark      |          861 |  115 |
	| Christina |          842 |   85 |
	| Dominic   |          836 |   37 |
	| Lissa     |          834 |  120 |
	| Lisa      |          813 |  159 |
	| Alison    |          775 |   61 |
	| Sui       |          754 |   78 |
	| Tim       |          702 |   35 |
	| L         |          696 |   10 |
	| Angela    |          694 |  101 |
	| Crissy    |          676 |   25 |
	| Lyn       |          675 |   45 |
	+-----------+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)


	SQL code used to arrive at answer:

		SELECT name,
		  review_count,
		  fans
		FROM user
		ORDER BY review_count DESC

---------------------------------------
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: there are 232 reviews with the word "hate" in them and 1780 reviews
	with the word "love" in them. Said that, there are more reviews with the word
	"love" in them.

	SQL code used to arrive at answer:

		-- for the word "love"
		SELECT count(text) AS reviews_love
		FROM review
		WHERE text LIKE "%love%"

		-- for the word "hate"
		SELECT count(text) AS reviews_hate
		FROM review
		WHERE text LIKE "%hate%"

---------------------------------------
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

		SELECT id,
		  name,
		  fans
		FROM user
		ORDER BY fans DESC
		LIMIT 10

	Copy and Paste the Result Below:

	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+

------------------------------------------------------------------------------
Part 2: Inferences and Analysis
------------------------------------------------------------------------------

---------------------------------------
1. Pick one city and category of your choice and group the businesses in that
city or category by their overall star rating. Compare the businesses with
2-3 stars to the businesses with 4-5 stars and answer the following questions.
Include your code.

I chose to analize Las Vegas' city as well as the Food's category.

i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, in this case this case one of the businesses (4 stars) is open for fewer
hours than its competitor (2.5 stars) on Saturday. If we remove the aggregation
by stars, we will see that this pattern is maintained throughout the week.

+-----------------------------+-------+--------------+----------------------+
| name                        | stars | review_count | hours                |
+-----------------------------+-------+--------------+----------------------+
| Sweet Ruby Jane Confections |   4.0 |           30 | Saturday|10:00-19:00 |
| Walgreens                   |   2.5 |            6 | Saturday|8:00-22:00  |
+-----------------------------+-------+--------------+----------------------+

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, the group with 4 stars has more reviews than the group with 2.5 stars.

+-----------------------------+-------+--------------+----------------------+
| name                        | stars | review_count | hours                |
+-----------------------------+-------+--------------+----------------------+
| Sweet Ruby Jane Confections |   4.0 |           30 | Saturday|10:00-19:00 |
| Walgreens                   |   2.5 |            6 | Saturday|8:00-22:00  |
+-----------------------------+-------+--------------+----------------------+

iii. Are you able to infer anything from the location data provided between these two groups? Explain.

No, since both are at least 10-12 blocks away. Also notice that their postal
codes are different, telling us that things that may influence one are might
not cause any change in the other.

+-----------------------------+-------+--------------+-----------------------------+-------------+
| name                        | stars | review_count | address                     | postal_code |
+-----------------------------+-------+--------------+-----------------------------+-------------+
| Sweet Ruby Jane Confections |   4.0 |           30 | 8975 S Eastern Ave, Ste 3-B | 89123       |
| Walgreens                   |   2.5 |            6 | 3808 E Tropicana Ave        | 89121       |
+-----------------------------+-------+--------------+-----------------------------+-------------+

SQL code used for analysis:

	--for part i and ii
	SELECT b.name,
	  b.stars,
	  b.review_count,
	  h.hours
	FROM (
	  ( business b INNER JOIN category c
		  ON b.id = c.business_id) INNER JOIN hours h
		    ON b.id = h.business_id)
	WHERE city = "Las Vegas" AND category = "Food"
	  AND stars >= 2
	GROUP BY b.stars
	ORDER BY b.stars DESC

	--for part iii
		SELECT b.name,
	  b.stars,
	  b.review_count,
	  b.address,
	  b.postal_code
	FROM (
	  ( business b INNER JOIN category c
		  ON b.id = c.business_id) INNER JOIN hours h
		    ON b.id = h.business_id)
	WHERE city = "Las Vegas" AND category = "Food"
	  AND stars >= 2
	GROUP BY b.stars
	ORDER BY b.stars DESC

---------------------------------------
2. Group business based on the ones that are open and the ones that are closed.
What differences can you find between the ones that are still open and the ones
that are closed? List at least two differences and the SQL code you used to
arrive at your answer.

+---------+---------------+---------------+--------------------+
| is_open |      av_stars |   avg_reviews | is_funny_or_useful |
+---------+---------------+---------------+--------------------+
|       0 |           2.0 |           4.0 |                  2 |
|       1 | 2.96153846154 | 38.7692307692 |                 26 |
+---------+---------------+---------------+--------------------+

i. Difference 1:

Open businesses possess a higher star rating when compared to closed businesses.
The same happens with average reviews.

ii. Difference 2:

There are less closed businesses listed as "funny" or "useful" compared to open
businesses.

SQL code used for analysis:

	SELECT is_open,
	  AVG(b.stars) AS av_stars,
	  AVG(b.review_count) AS avg_reviews,
	  COUNT(r.useful)+COUNT(r.funny) AS is_funny_or_useful
	FROM business b INNER JOIN review r
	  ON b.id = r.id
	GROUP BY b.is_open

---------------------------------------
3. For this last part of your analysis, you are going to choose the type of
analysis you want to conduct on the Yelp dataset and are going to prepare the
data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes
for sentiment analysis, clustering businesses to find commonalities or
anomalies between them, predicting the overall star rating for a business,
predicting the number of fans a user will have, and so on. These are just a
few examples to get you started, so feel free to be creative and come up with
your own problem you want to solve. Provide answers, in-line, to all of the
following:

i. Indicate the type of analysis you chose to do:

	Analysis by food preferences among different cuisines.

ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

	I will choose different cuisines, including Chinese, Korean, French, Mexican,
	Italian, Japanese, Indian, to quantify their star ratings and
	total number of reviews. This will allow me to "predict" which cuisine is
	more popular on Yelp.

iii. Output of your finished dataset:

	+----------+------------+---------------+---------------+-----------+
	| category | resturants |     avg_start |   avg_reviews | city      |
	+----------+------------+---------------+---------------+-----------+
	| Chinese  |         13 | 3.76923076923 | 423.230769231 | Las Vegas |
	| French   |         12 |           4.0 | 135.083333333 | Las Vegas |
	| Italian  |         13 | 3.53846153846 | 78.2307692308 | Montréal  |
	| Mexican  |         28 |         3.625 |          73.0 | Edinburgh |
	| Indian   |          6 |           3.5 |          32.0 | Aurora    |
	| Japanese |         20 |         3.475 |         22.85 | Toronto   |
	| Korean   |          7 |           4.5 |           8.0 | Toronto   |
	+----------+------------+---------------+---------------+-----------+

iv. Provide the SQL code you used to create your final dataset:

	SELECT c.category,
		COUNT(b.name) AS resturants,
		AVG(stars) AS avg_start,
		AVG(b.review_count) AS avg_reviews,
		b.city
	FROM ((
		business b INNER JOIN hours h
			ON b.id = h.business_id) INNER JOIN category c
				ON c.business_id = b.id)
	WHERE c.category IN ("Chinese",
		"Korean",
		"French",
		"Mexican",
		"Italian",
		"Japanese",
		"Indian")
	GROUP BY c.category
	ORDER BY AVG(b.review_count) DESC
